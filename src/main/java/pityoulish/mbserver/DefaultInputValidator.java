/*
 * This work is released into the Public Domain under the
 * terms of the Creative Commons CC0 1.0 Universal license.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */
package pityoulish.mbserver;



/**
 * Default implementation of {@link InputValidator}.
 * Problem reports are generated by a {@link ProblemFactory}.
 * This class is thread-safe if the factory and other helper classes are.
 */
public class DefaultInputValidator<P> implements InputValidator<P>
{
  protected final ProblemFactory<P> pFactory;

  //@@@ helper: sanity checker from pityoulish.msgboard
  //@@@ helper: sanity checker from pityoulish.tickets

  /**
   * Creates a new input validator.
   *
   * @param pf   the problem factory to use
   */
  public DefaultInputValidator(ProblemFactory<P> pf)
  {
    if (pf == null)
       throw new NullPointerException("ProblemFactory");

    pFactory = pf;
  }


  // non-javadoc, see interface
  public P checkMarker(String m)
  {
    throw new UnsupportedOperationException("@@@ should delegate to msgboard");
  }


  // non-javadoc, see interface
  public P checkLimit(int l)
  {
    throw new UnsupportedOperationException("@@@ should delegate to msgboard");
  }
    ;


  // non-javadoc, see interface
  public P checkText(String t)
  {
    throw new UnsupportedOperationException("@@@ should delegate to msgboard");
  }
    ;


  // non-javadoc, see interface
  public P checkUsername(String u)
  {
    //@@@ check username in both TicketManager and MessageBoard?
    throw new UnsupportedOperationException("@@@ should delegate to tickets");
  }


  // non-javadoc, see interface
  public P checkTicket(String t)
  {
    throw new UnsupportedOperationException("@@@ should delegate to tickets");
  }

}

